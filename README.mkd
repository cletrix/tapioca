Tapioca
=======

Tapioca is small and flexible micro-framework on top of Tornado to enable a
easier way to create RESTful API's.

Why Tapioca?
-----------

Create APIs using Tornado is easy and Tapioca makes it even more easy.
Tapioca have some common behaviour to manage resources as close as possible
to the definition of a RESTful API. Tapica have many renders to enable your
resource be serialized in differents formats. It provides you a
easy way to make your API respond in a format that your API clients can better 
understand. Doesn't matter if your API client is a machine or a human. Tapica
gives you a automatic console interface to your API and it's ready to be used
as the documentation and testing interface by your API clients.


Usage
-----

...

Extending
---------

You can easily make your API speak a new "language". To implement your own render
all you need to do is create a python class that should extends the
`tapioca.Encoder`, override the both methods `encode` and `decode`, then provide
some metadata about your new encoder by giving the `mimetype` that it will
handle and the `extension` that represents it. There is a example of an render
to enable responses as a yaml data.

```python

import yaml

from tapioca import Encoder

class YamlEncoder(Encoder):
    mimetype = 'text/yaml'
    extension = 'yaml'

    def encode(self, data):
        return yaml.dump(data)

    def decode(self, data):
        return yaml.load(data)

```

After that your new render is ready to be used. To enable it in all resources
which you want to respond using yaml format you have to plus it the
`encoders` attribute in your `ResourceHandler`s.


```python

from tapioca import ResourceHandler

class CommentsResource(ResourceHandler):
    encoders = ResourceHandler.encoders + (YamlEncoder,)

    # ...

```

Now you can access your route and see it working.

    $ curl -X GET http://localhost:8000/comments.yaml


Contributing
------------

To contribute to the Tapioca you can just [fork the project](https://github.com/globocom/tapioca/fork_select), do all the changes
you want and then send us a pull request. It's important to make consistents pull
request's sending every new feature in a separated pull request in order to give us
the possibility to review every change you suggested, comment it and accept feature
by feature. We are open to suggestions and to discuss all your ideas.


License
-------

Tapioca is licensed under the MIT License:

The MIT License

Copyright (c) 2012 globo.com lambda@corp.globo.com

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
